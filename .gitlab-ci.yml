default:
  image: $CI_REGISTRY/arcus/common/images/base-images/runtime/integration_test:latest
variables:
  GIT_FETCH_EXTRA_FLAGS: --tags

stages:
  - generate-api
  - build
  - test
  - quality
  - release

generate-api:
  image: $CI_REGISTRY/arcus/common/images/base-images/pre_build/docker:latest
  stage: generate-api
  environment:
    name: $CI_COMMIT_BRANCH
  script:
    - export OPENAPIURL
    - export OPENAPIVOLUME
    - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - make generate-api-clients
    - docker logout $CI_REGISTRY
  artifacts:
    expire_in: 30 min
    paths:
      - openapi
  resource_group: $CI_COMMIT_BRANCH

build:cli:
  image: $CI_REGISTRY/arcus/common/images/base-images/buildtime/go:latest
  stage: build
  environment:
    name: $CI_COMMIT_BRANCH
  script:
    - export OPENAPIURL
    - make build-only
  artifacts:
    expire_in: 30 min
    paths:
      - cntb
  resource_group: $CI_COMMIT_BRANCH

test:integration-test:
  stage: test
  variables:
    NODE_ENV: test
  environment:
    name: $CI_COMMIT_BRANCH
  script:
    - export API_ENDPOINT
    - export OAUTH2_CLIENT_SECRET
    - export OAUTH2_URL
    - export OAUTH2_USER_ID
    - export OAUTH2_PASS
    - bats -rt --timing bats/*.bats
  only:
    - dev
    - test
    - staging
    - prod
  resource_group: $CI_COMMIT_BRANCH

quality:sonar-qube:
  image: sonarsource/sonar-scanner-cli:latest
  stage: quality
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
  only:
    - dev
  resource_group: $CI_COMMIT_BRANCH

sync-github:
  image: $CI_REGISTRY/arcus/common/images/base-images/buildtime/go:latest
  stage: release
  before_script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | tee /etc/apt/sources.list.d/goreleaser.list
    - apt update
    - apt install goreleaser
  script:
    - rm -rf .git
    - mkdir .tmp/
    - cd .tmp/
    - git clone http://root:$GITHUB_ACCESS_TOKEN@$GITHUB_REPO
    - cd cntb/ && git clone http://root:$GITHUB_ACCESS_TOKEN@$GITHUB_REPO
    - cp -r .git ../..
    - cd ../..
    - git add .
    - git diff-index --quiet HEAD || (git commit -m 'release' && git push http://root:$GITHUB_ACCESS_TOKEN@$GITHUB_REPO)
    - export GITHUB_TOKEN=$GITHUB_ACCESS_TOKEN
    - git tag $TAG_VERSION
    - git push origin $TAG_VERSION
    - goreleaser release --rm-dist
  only:
    - feature/AR-362-push-to-github